/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gui;

import javax.imageio.ImageIO;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.filechooser.FileNameExtensionFilter;
import java.awt.BorderLayout;

import recimage.RecImage;
import static recimage.RecImage.rec;

/**
 *
 * @author jhord_000
 */
public final class ManageRecs extends JFrame {

    public ManageRecs() {
        super();
        //rec.setVisible(false);

        rec.setVisible(true);
        rec.setSize(200,200);

        initComponents();
        setSize(830,250);
        setVisible(true);
    }
    public String [] get_params()
    {
        Object objs[]=imageColor.getSelectedObjects();
        String c="-",cc="";
        if(X.isSelected())
            c+="-X:"+X_.getText()+":X-";
        if(Y.isSelected())
            c+="-Y:"+Y_.getText()+":Y-";
        if(show.isSelected())
            c+="p-";
        if(save.isSelected())
            c+="s-";
        if(toBot.isSelected())
            c+="b-";
        if(console.isSelected())
            c+="cc-";
        if(objs.length>0)
            c+=objs[0].toString().contains("Full Color")?"fc-":
                    objs[0].toString().contains("Gray")?"es-":
                    objs[0].toString().contains("Contour")?"co-":"";
        if(out.isSelected())
        {
            c+="f-";
            c+=t_.isSelected()?"t-":"";
            cc=t_.isSelected()?t.getText():"";
        }
        String []param={name_file.getText(),c,cc};
        return param;
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jToolBar2 = new javax.swing.JToolBar();
        imageColor = new javax.swing.JComboBox();
        show = new javax.swing.JCheckBox();
        save = new javax.swing.JCheckBox();
        console = new javax.swing.JCheckBox();
        out = new javax.swing.JCheckBox();
        file_out = new javax.swing.JTextField();
        toBot = new javax.swing.JCheckBox();
        X = new javax.swing.JCheckBox();
        X_ = new javax.swing.JTextField();
        Y = new javax.swing.JCheckBox();
        Y_ = new javax.swing.JTextField();
        t_ = new javax.swing.JCheckBox();
        t = new javax.swing.JTextField();
        procces = new javax.swing.JButton();
        jToolBar3 = new javax.swing.JToolBar();
        jButton1 = new javax.swing.JButton();
        name_file = new javax.swing.JTextField();
        start = new javax.swing.JButton();
        JIF = new javax.swing.JPanel();
        
        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
 

        jToolBar2.setRollover(true);
        jToolBar2.setVisible(false);

        imageColor.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "White&Black", "Contour", "Gray Scale", "Full Color" }));
        imageColor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                imageColorActionPerformed(evt);
            }
        });
        jToolBar2.add(imageColor);

        show.setText("Show");
        show.setActionCommand("");
        show.setFocusable(false);
        show.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        show.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jToolBar2.add(show);


        save.setText("Save");
        save.setActionCommand("");
        save.setFocusable(false);
        save.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        save.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jToolBar2.add(save);

        console.setText("Console");
        console.setFocusable(false);
        console.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        console.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jToolBar2.add(console);

        out.setText("out.do");
        out.setFocusable(false);
        out.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        out.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        out.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                outActionPerformed(evt);
            }
        });
        jToolBar2.add(out);

        file_out.setEditable(false);
        file_out.setColumns(10);
        jToolBar2.add(file_out);

        toBot.setText("toBot");
        toBot.setFocusable(false);
        toBot.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        toBot.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        toBot.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                toBotActionPerformed(evt);
            }
        });
        jToolBar2.add(toBot);

        X.setText("X:");
        X.setFocusable(false);
        X.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        X.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jToolBar2.add(X);

        X_.setText("0");
        jToolBar2.add(X_);

        Y.setText("Y:");
        Y.setActionCommand("");
        Y.setFocusable(false);
        Y.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        Y.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jToolBar2.add(Y);

        Y_.setText("0");
        jToolBar2.add(Y_);

        t_.setText("T:");
        t_.setFocusable(false);
        t_.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        t_.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        t_.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                t_ActionPerformed(evt);
            }
        });
        jToolBar2.add(t_);

        t.setEditable(false);
        t.setMinimumSize(new java.awt.Dimension(6, 3));
        jToolBar2.add(t);

        procces.setText("Procces");
        procces.setEnabled(false);
        procces.setFocusable(false);
        procces.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        procces.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        procces.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                proccesActionPerformed(evt);
            }
        });
        jToolBar2.add(procces);

        jToolBar3.setRollover(true);

        jButton1.setText(">");
        jButton1.setFocusable(false);
        jButton1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton1.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jToolBar3.add(jButton1);

        name_file.setText("D:\\AppServ\\here\\Clcikbot\\0.jpg");
        name_file.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                name_fileActionPerformed(evt);
            }
        });
        jToolBar3.add(name_file);

        start.setText("Load");
        start.setFocusable(false);
        start.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        start.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        start.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                startActionPerformed(evt);
            }
        });
        jToolBar3.add(start);

        JIF.add(rec,BorderLayout.CENTER);
        //JIF.add(rec);
        //JIF.setLayout(new FlowLayout());

        javax.swing.GroupLayout JIFLayout = new javax.swing.GroupLayout(JIF);
        JIF.setLayout(JIFLayout);
        JIFLayout.setHorizontalGroup(
            JIFLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(rec, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            //.addGap(0, 0, Short.MAX_VALUE)
        );
        JIFLayout.setVerticalGroup(
            JIFLayout.createSequentialGroup()
            .addComponent(rec, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            //.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            //.addGap(0, 250, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(JIF, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jToolBar2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 731, Short.MAX_VALUE)
            .addComponent(jToolBar3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jToolBar3, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(JIF, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jToolBar2, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void t_ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_t_ActionPerformed
      t.setEditable(t_.isSelected());

    }
    private void outActionPerformed(java.awt.event.ActionEvent evt) {
     if(out.isSelected()){
        file_out.setEditable(true);
        file_out.setText(RecImage.NAMEFILE+".do");
      }else{
        file_out.setEditable(false);
        t_.setSelected(false);
      }
    }
    private void startActionPerformed(java.awt.event.ActionEvent evt) {
       if(!start.getText().equals("Load")){
           //rec.setVisible(false);
           jToolBar2.setVisible(false);
           procces.setEnabled(false);
           start.setText("Load");
       }else{        
           procces.setEnabled(true);
           start.setText("Clear");
           jToolBar2.setVisible(true); 
       }
    }
    private void proccesActionPerformed(java.awt.event.ActionEvent evt) {
        procces.setText("Working...");
        RecImage.main(get_params());
        procces.setText("Process");
    }

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed

        JFileChooser file=new JFileChooser();
        //Setting Up The Filter
        FileNameExtensionFilter imageFilter 
                    = new FileNameExtensionFilter("Image files",ImageIO.getReaderFileSuffixes());
        //Attaching Filter to JFileChooser object
        file.setFileFilter(imageFilter);
        file.showOpenDialog(this);
        name_file.setText(file.getSelectedFile().getAbsolutePath());        
        procces.setEnabled(true);
        start.setText("Clear");
        jToolBar2.setVisible(true);
    }
    private javax.swing.JPanel JIF;
    private javax.swing.JCheckBox X;
    private javax.swing.JTextField X_;
    private javax.swing.JCheckBox Y;
    private javax.swing.JTextField Y_;
    private javax.swing.JCheckBox console;
    private javax.swing.JTextField file_out;
    private javax.swing.JComboBox <String> imageColor;
    private javax.swing.JButton jButton1;
    private javax.swing.JToolBar jToolBar2;
    private javax.swing.JToolBar jToolBar3;
    private javax.swing.JTextField name_file;
    private javax.swing.JCheckBox out;
    private javax.swing.JButton procces;
    private javax.swing.JCheckBox show;
    private javax.swing.JCheckBox save;
    private javax.swing.JButton start;
    private javax.swing.JTextField t;
    private javax.swing.JCheckBox t_;
    private javax.swing.JCheckBox toBot;


    /**
     *
     */
    private static final long serialVersionUID = -3301033985130751239L;


    private void name_fileActionPerformed(java.awt.event.ActionEvent evt){}
    private void imageColorActionPerformed(java.awt.event.ActionEvent evt){}
    private void toBotActionPerformed(java.awt.event.ActionEvent evt) {}
}
